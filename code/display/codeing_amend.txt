报错及修改：
0.display\graphics.c(738): error:  #20: identifier "clkElement" is undefined
   char update_bresenham_line(clkElement type, void *param)
源码：
enum clkElement {
	CLK_RESERVED   = 0,
	CLK_CENTER,
};

形参要带enum: (enum clkElement type, xx)

1.expression must have pointer type
   u8 x;
源码：
源码：
   x = clkPlate->dots_pos[n]->x;
   要讲dots_pos单指针改成双指针：
	struct dot_pos **dots_pos;
	
	指针和指针数组


	
2.display\graphics.c(502): error:  #513: a value of type "u8 (*)[64]" cannot be assigned to an entity of type "u8 **"
   clkPanel->active    = TRUE;
源码：
   bool active;
   
   #define TRUE                      1
   #define FALSE                     0

   typedef enum {
     FALSE = 0,
     TRUE  = !FALSE,
   } bool;

   发现重复定义。取消下面的定义
   //#define TRUE                      1
   //#define FALSE                     0

3.？？？？？？？？？？？？？？？？？
display\graphics.c(484): error:  #513: a value of type "u8 (*)[64]" cannot be assigned to an entity of type "u8 **"
源码：
	clkPanel->dots_buf  = panel_dotsPos;
	
	u8 **dots_buf;
	
	u8 panel_dotsPos[PANEL_HORIZONTAL][PANEL_VERTICAL] = {0};
	
	两个都是2级指针，有问题吗？
    -----编译出错，不能用二级指针直接指向二维数组
	-----二维数组名是一个数组指针，而非二级指针
	2级指针和1级指针。当更改指针后，对应的地方也要修改

	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	用指针替代二维数组是一种可怕的想法，非常容易引入错误
    如果确实需要通过指针访问二维数组，建议采用如下方式：

    int a[m][n];
    int *p = &a[0][0];
    通过p[i*n+j]访问a[i][j]

3.1 display\graphics.c(353): error:  #137: expression must be a modifiable lvalue
        clkPanel->dots_buf + X * clkPanel->width + Y = 1;  /* 是否应该dots_buf指向第0行第0列元素地址更好? */
	源码：
	clkPanel->dots_buf	= panel_dotsPos;	/* 第0行首地址*/

	u8 *dots_buf;
	u8 panel_dotsPos[PANEL_HORIZONTAL][PANEL_VERTICAL] = {0};

	关于expression must be a modifiable lvalue
	描述:表达式必须是一个可以修改的左值
	主要出现在这种现象
	a=NUM;
	NUM是一个数值或表达式,a为一个变量
	但a被定义为像const这种不可更改的类型导致NUM不能赋值给变量
	解决方法要么放弃赋值要么修改变量属性

	----------------
	其实也不是上面说的首地址和0列的差异，而是左值是元素地址，不知元素值！改成*(Addr)

4.display\graphics.c(841): error:  #29: expected an expression
	if(minuhand == NULL)) // 多了右括号

5.
display\graphics.c(814): error:  #513: a value of type "u8" cannot be assigned to an entity of type "u8 *"
    hourhand->Htimer   = hourhand->plate->timer->hour;
	源码：
	u8 *Htimer;
		u8 hour;
		
	hourhand->Htimer   = &hourhand->plate->timer->hour;
	
6.display\graphics.c(780): error:  #513: a value of type "struct clk_hands_prop *" cannot be assigned to an entity of type "struct clk_scale_prop *"
  sprop = (struct clk_hands_prop *)param;   //两边结构体类型不一致

7.display\graphics.c(682): error:  #118: a void function may not return a value
   函数类型和函数体内返回的类型不一致
   
8.define定的宏是什么类型？
  display\graphics.c(659): warning:  #68-D: integer conversion resulted in a change of sign
  函数类型char,而return -EFAULT; 而#define EFAULT  1
  
9.display\graphics.c(888): error:  #44: expression must have pointer type
  PANEL->width 不应用->, 而应该用.

10.display\graphics.c(804): warning:  #513-D: a value of type "char *" cannot be assigned to an entity of type "u8 *"
 tmp = (char *)hour_dotspos;
 u8 tmp = NULL;
 改成tmp = (u8 *)hour_dotspos;

11.？？？？？？？？
display\graphics.c(673): warning:  #68-D: integer conversion resulted in a change of sign
  else            {   incx = -1;  dx=-dx;   }	  
  源码：
  u8 incx
  改成char incx,incy;

12.?????????????????????????????
display\graphics.c(673): warning:  #68-D: integer conversion resulted in a change of sign
        else            {   incx = -1;  dx=-dx;   }             //求X增量的绝对值
		
		incx、dx都已经是char类型了，怎么还是报warning?
		-1是int类型的，结果dx就不是char范围内的值了，而且还会导致截取低位数据给char

		问题不是dx=-dx，而是在incx=-1处！
		------------------------------------------------
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		!                                                                                                                                          !
		! 为了代码移植，一定不要用 char ！！！ 要使用 int8_t 或 uint8_t                                                                            !
		! arm-linux-gcc 规定 char 为 unsigned char ！！！                                                                                          !
		! 用十六进制（0x开头的）表示的常数，都代表无符号数。                                                                                       !
		! char short 在使用时编译器会 Promotion 为 int or unsigned int 。                                                                          !
		! 我以前总以为 char 代表有符号，而 unsigned char 代表无符号。现在才知道如果换做 short 或 int,这样理解都没问题，因为c标准明确定义了。       !
		! 但是，唯独 char 不能这样理解，因为c标准中对此是 Impementation Defined，就是未明确定义，由具体的编译器明确定义。                          !
		!                                                                                                                                          !
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

13.display\graphics.c(537): error:  #513: a value of type "u8" cannot be assigned to an entity of type "u8 *"
        platecenter->plaCenter->cx = platecenter->plate->x0;
		
		改成platecenter->plaCenter->cx = &platecenter->plate->x0;

14.display\graphics.h(18): warning:  #2969-D: "\" followed by white space is not a line splice
         /5 |4  \ 
   在\后面有个空格，编译器认为是连接符，但实际却是*/

15.display\graphics.c(517): error:  #513: a value of type "u8" cannot be assigned to an entity of type "struct dot_pos"
        placenter->plate->dots_pos[x0][y0]   = placenter->cent_buf[0];
display\graphics.c(518): error:  #513: a value of type "u8" cannot be assigned to an entity of type "struct dot_pos"
        placenter->plate->dots_pos[x0][y0+1] = placenter->cent_buf[1];
display\graphics.c(519): error:  #513: a value of type "u8" cannot be assigned to an entity of type "struct dot_pos"
        placenter->plate->dots_pos[x0][y0-1] = placenter->cent_buf[2];
display\graphics.c(520): error:  #513: a value of type "u8" cannot be assigned to an entity of type "struct dot_pos"
        placenter->plate->dots_pos[x0+1][y0] = placenter->cent_buf[3];
display\graphics.c(521): error:  #513: a value of type "u8" cannot be assigned to an entity of type "struct dot_pos"
        placenter->plate->dots_pos[x0-1][y0] = placenter->cent_buf[4];
		
		struct dot_pos **dots_pos;
		
		struct dot_pos {
			u8 x;
			u8 y;
		};

		
		
















